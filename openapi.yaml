openapi: 3.0.0
info:
  title: Stock Portfolio Management API
  version: 1.0.0
  description: API for managing stock portfolios with user authentication and Alpha Vantage integration

servers:
  - url: http://localhost:8000
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string

    Stock:
      type: object
      properties:
        id:
          type: integer
        ticker_symbol:
          type: string
        name:
          type: string
        issue_date:
          type: string
          format: date
        number_of_shares:
          type: number
        purchase_price:
          type: number

    Portfolio:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        stocks:
          type: array
          items:
            $ref: '#/components/schemas/Stock'

    Error:
      type: object
      properties:
        detail:
          type: string

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/logout:
    post:
      summary: User logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful logout
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /portfolio:
    get:
      summary: Get current user's portfolio (includes refreshing stock data)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /portfolio/stock:
    post:
      summary: Add a stock to the current user's portfolio
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticker_symbol:
                  type: string
                name:
                  type: string
                issue_date:
                  type: string
                  format: date
                number_of_shares:
                  type: number
                purchase_price:
                  type: number
              required:
                - ticker_symbol
                - number_of_shares
                - purchase_price
      responses:
        '201':
          description: Stock added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /portfolio/stock/{stock_id}:
    put:
      summary: Update a stock in the current user's portfolio
      security:
        - bearerAuth: []
      parameters:
        - name: stock_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticker_symbol:
                  type: string
                name:
                  type: string
                issue_date:
                  type: string
                  format: date
                number_of_shares:
                  type: number
                purchase_price:
                  type: number
      responses:
        '200':
          description: Stock updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Stock not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Remove a stock from the current user's portfolio
      security:
        - bearerAuth: []
      parameters:
        - name: stock_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Stock removed successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Stock not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'